#!/bin/bash
# Tool to sort BUSCO output into gene folders for phylogenomics
#
# This program is distributed under the terms of the GNU General Public License v3
#
#  If you use BUSCOfilter in your work please cite:
#      Hill R. (2024) BUSCOfilter. https://github.com/Rowena-h/BUSCOfilter

display_usage() {
    echo "-------------------------------------------------"
    echo "BUSCOfilter v2.0"
    echo "-------------------------------------------------"
    echo ""
    echo "USAGE: $0 [-d indir] [-m all]"
    echo ""
    echo "OPTIONS"
    echo "  -d, --directory"
    echo "      directory containing BUSCO (>= v5.7.1) output folders which contain subdirectories with the typical 'run_' prefix"
    echo "  -m, --mode"
    echo "      produce files for all single-copy BUSCOs or only those with a BUSCO in all taxa. Options 'all' & 'common' [Default = common]"
    echo ""
    exit
}

if [ -z "$1" ]
then
    display_usage
    exit
fi

while [ "$#" -gt 0 ]
do
    ARGUMENTS="$1"
    case $ARGUMENTS in
        -h|--help)
        display_usage
        ;;
        -d|--directory)
        directory="$2"
        ;;
        -m|--mode)
        mode="$2"
        shift
    esac
    shift
done

if [ -z "$directory" ]
then
    echo ""
    echo "Missing required options"
    display_usage
    echo ""
    echo "Exiting..."
    exit
fi

if [ -z "$mode" ]
then
    mode="common"
fi

echo "`date -u`"
echo "-------------------------------------------------"
echo "Starting BUSCOfilter v2.0"
echo "-------------------------------------------------"

date=$(date +"%d-%m-%Y")
outdir=${directory}/BUSCOfilter

mkdir -p ${outdir}

ls -d ${directory}/*/run_* | sed 's|/run_.*||' | sed 's|^.*/||' > ${outdir}/genome_list_${date}

echo "List of all genomes in the provided directory written to ${outdir}/genome_list_${date}"

#Check all BUSCO folders are complete

if [ $(cat ${outdir}/genome_list_${date}| wc -l) != $(ls ${directory}/*/short*.txt | wc -l) ]
then
    echo "Error: provided directory seems to contain incomplete BUSCO runs"
    echo "Exiting..."
    exit
fi

#Make text file with BUSCO stats

list=${outdir}/genome_list_${date}

for genome in `cat $list`
do
    grep "C:" ${directory}/${genome}/run_*/short_summary.txt >> ${outdir}/summaries
done

paste $list ${outdir}/summaries > ${outdir}/busco_stats_${date}.txt

rm ${outdir}/summaries

echo "Summary of BUSCO statistics per genome written to ${outdir}/busco_stats_${date}.txt"

#Make list of BUSCOs to make files for

dirs=(`ls -d ${directory}/*/run_*/busco_sequences/single_copy_busco_sequences`)

if [ $mode = common ]
#Filter for common BUSCOs
then
    find "${dirs[@]}" -maxdepth 1 -type f -name "*.faa" -printf '%f\n' | sort | uniq -c | sed -n "s/^ *${#dirs[@]} //p" > ${outdir}/busco_list_${date}

    echo "List of `cat ${outdir}/busco_list_${date} | wc -l` single copy BUSCOs common to all genomes written to ${outdir}/busco_list_${date}"
elif [ $mode = all ]
#Use all BUSCOS
then
    find "${dirs[@]}" -maxdepth 1 -type f -name "*.faa" -printf '%f\n' | sort | uniq -c | awk '{print $2}' > ${outdir}/busco_list_${date}

    echo "List of `cat ${outdir}/busco_list_${date} | wc -l` single copy BUSCOs written to ${outdir}/busco_list_${date}"
fi

#Copy and rename BUSCOs

n=0

for genome in `cat $list`
do
    n=$((n+1))
    echo -ne "Extracting BUSCOs, genome ${n} / `cat $list | wc -l`"\\r
    
    mkdir -p ${outdir}/${genome}/for_phylo

    for busco in `cat ${outdir}/busco_list_${date} | cut -f 1 -d '.'`
    do
        if [ -f ${directory}/${genome}/run_*/busco_sequences/single_copy_busco_sequences/${busco}.faa ]
        then
            cp ${directory}/${genome}/run_*/busco_sequences/single_copy_busco_sequences/${busco}.faa ${outdir}/${genome}/for_phylo/${busco}_${genome}
        
            #Replace fasta header with genome name
            sed -i "1s/.*/>${genome}/" ${outdir}/${genome}/for_phylo/${busco}_${genome}
        fi
    done
done

#Move into new folder of fasta files

n=0

mkdir -p ${outdir}/fasta_${date}

for busco in `cat ${outdir}/busco_list_${date} | cut -f 1 -d '.'`
do
    cat ${outdir}/*/for_phylo/${busco}* > ${outdir}/fasta_${date}/${busco}.fa
    
    n=$((n+1))
    echo -ne "Writing fasta file for BUSCO ${n} / `cat ${outdir}/busco_list_${date} | wc -l`"\\r
done

#Check number of sequences in fasta files

for busco in `cat ${outdir}/busco_list_${date} | cut -f 1 -d '.'`
do
    fgrep -o '>' ${outdir}/fasta_${date}/${busco}.fa | wc -l > ${outdir}/tmp

    if [ $mode = common ] && [ `cat ${outdir}/tmp` != `cat ${list} | wc -l` ]
    then
        echo ${busco} >> ${outdir}/error_list
    fi
    
    if [ $mode = all ]
    then
        printf "${busco}%s\t$(cat ${outdir}/tmp)%s\n" >> ${outdir}/tmp_busco_list_${date}
    fi
done

if [ $mode = all ]
then
    mv ${outdir}/tmp_busco_list_${date} ${outdir}/busco_list_${date}
    echo "Number of genomes that each BUSCO was found in has been added to ${outdir}/busco_list_${date}"
fi

echo "Fasta files ready to align in ${directory}/fasta_${date}"

if [ $mode = common ] && [ -f ${outdir}/error_list ]
then
    echo "`cat ${outdir}/error_list | wc -l` fasta files have the wrong number of taxa. BUSCO IDs have been printed to ${outdir}/error_list, please check these files manually before trying to align"
fi

rm ${outdir}/tmp
for genome in `cat $list`
do
    rm -rf ${outdir}/${genome}/for_phylo
done

echo "-------------------------------------------------"
echo "Finished `date -u`"
echo "-------------------------------------------------"
